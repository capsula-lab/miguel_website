{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/imac/Documents/portofolioZ/portfolio/src/Projects.js\";\nimport React from \"react\";\nimport Project from './Project.js';\nimport { readRemoteFile } from 'react-papaparse';\n\nclass Projects extends React.Component {\n  render() {\n    let projectsSelvIkei = ['a', 'a', 'a', 'a'];\n    const items = [];\n\n    function splitter(results) {\n      let dadosLength = results.length;\n      let selvCounter = 0;\n\n      for (let i = 1; i < dadosLength; i++) {\n        if (results[i][0] == 'selv ikei ') {\n          projectsSelvIkei[selvCounter] = results[i][1];\n          items.push( /*#__PURE__*/_jsxDEV(\"li\", {\n            children: projectsSelvIkei[selvCounter]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 22\n          }, this));\n          selvCounter++;\n        }\n      }\n    }\n\n    ;\n    readRemoteFile(\"http://localhost:3001/projectos.csv\", {\n      complete: results => {\n        splitter(results['data']);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"projects\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/imac/Documents/portofolioZ/portfolio/src/Projects.js"],"names":["React","Project","readRemoteFile","Projects","Component","render","projectsSelvIkei","items","splitter","results","dadosLength","length","selvCounter","i","push","complete"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,cAAR,QAA6B,iBAA7B;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCC,EAAAA,MAAM,GAAG;AACP,QAAIC,gBAAgB,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAAvB;AACA,UAAMC,KAAK,GAAG,EAAd;;AACA,aAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,UAAIC,WAAW,GAAGD,OAAO,CAACE,MAA1B;AACA,UAAIC,WAAW,GAAG,CAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAApB,EAAiCG,CAAC,EAAlC,EAAsC;AACpC,YAAGJ,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,KAAiB,YAApB,EAAiC;AAC/BP,UAAAA,gBAAgB,CAACM,WAAD,CAAhB,GAAgCH,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAhC;AACAN,UAAAA,KAAK,CAACO,IAAN,eAAW;AAAA,sBAAKR,gBAAgB,CAACM,WAAD;AAArB;AAAA;AAAA;AAAA;AAAA,kBAAX;AACAA,UAAAA,WAAW;AACZ;AACF;AACA;;AAAA;AACDV,IAAAA,cAAc,CAAC,qCAAD,EAAwC;AAChDa,MAAAA,QAAQ,EAAGN,OAAD,IAAa;AACrBD,QAAAA,QAAQ,CAACC,OAAO,CAAC,MAAD,CAAR,CAAR;AACD;AAH+C,KAAxC,CAAd;AASA,wBACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,gBAECF;AAFD;AAAA;AAAA;AAAA;AAAA,YADF;AAOH;;AA/BoC;;AAmCvC,eAAeJ,QAAf","sourcesContent":["import React from \"react\";\nimport Project from './Project.js';\nimport {readRemoteFile} from 'react-papaparse';\n\nclass Projects extends React.Component {\n  render() {\n    let projectsSelvIkei = ['a','a','a','a'];\n    const items = [];\n    function splitter(results) {\n      let dadosLength = results.length;\n      let selvCounter = 0;\n      for (let i = 1; i < dadosLength; i++) {\n        if(results[i][0] == 'selv ikei '){\n          projectsSelvIkei[selvCounter] = results[i][1];\n          items.push(<li>{projectsSelvIkei[selvCounter]}</li>);\n          selvCounter++;\n        }\n      }\n      };\n      readRemoteFile(\"http://localhost:3001/projectos.csv\", {\n            complete: (results) => {\n              splitter(results['data']);\n            },\n          });\n\n\n\n\n      return(\n        <div id=\"projects\">\n\n        {items}\n\n        </div>\n      )\n  }\n}\n\n\nexport default Projects\n"]},"metadata":{},"sourceType":"module"}