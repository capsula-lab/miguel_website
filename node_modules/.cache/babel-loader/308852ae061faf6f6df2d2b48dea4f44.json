{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/imac/Documents/portofolioZ/portfolio/src/Projects.js\";\nimport React from \"react\";\nimport Project from './Project.js';\nimport { readRemoteFile } from 'react-papaparse';\n\nclass Projects extends React.Component {\n  render() {\n    let projectsSelvIkei = ['', '', '', ''];\n\n    function splitter(results) {\n      let dadosLength = results.length;\n      let selvCounter = 0;\n\n      for (let i = 1; i < dadosLength; i++) {\n        if (results[i][0] == 'selv ikei ') {\n          projectsSelvIkei[selvCounter] = results[i][1];\n          selvCounter++;\n        }\n      }\n    }\n\n    ;\n    readRemoteFile(\"http://localhost:3001/projectos.csv\", {\n      complete: results => {\n        splitter(results['data']);\n      }\n    });\n    const items = [];\n    let nomes = this.props.projectNames;\n    console.log(typeof nomes);\n    console.log(typeof this.props.projectNames);\n\n    if (!(this.nomes === undefined)) {\n      console.log('dentro do if ');\n\n      for (const [value] of Object.entries(this.nomes)) {\n        console.log(value);\n        items.push( /*#__PURE__*/_jsxDEV(\"li\", {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 24\n        }, this));\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"projects\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/imac/Documents/portofolioZ/portfolio/src/Projects.js"],"names":["React","Project","readRemoteFile","Projects","Component","render","projectsSelvIkei","splitter","results","dadosLength","length","selvCounter","i","complete","items","nomes","props","projectNames","console","log","undefined","value","Object","entries","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,cAAR,QAA6B,iBAA7B;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCC,EAAAA,MAAM,GAAG;AACP,QAAIC,gBAAgB,GAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,CAAvB;;AAEA,aAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,UAAIC,WAAW,GAAGD,OAAO,CAACE,MAA1B;AACA,UAAIC,WAAW,GAAG,CAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAApB,EAAiCG,CAAC,EAAlC,EAAsC;AACpC,YAAGJ,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,KAAiB,YAApB,EAAiC;AAC/BN,UAAAA,gBAAgB,CAACK,WAAD,CAAhB,GAAgCH,OAAO,CAACI,CAAD,CAAP,CAAW,CAAX,CAAhC;AACAD,UAAAA,WAAW;AACZ;AACF;AACA;;AAAA;AACDT,IAAAA,cAAc,CAAC,qCAAD,EAAwC;AAChDW,MAAAA,QAAQ,EAAGL,OAAD,IAAa;AACrBD,QAAAA,QAAQ,CAACC,OAAO,CAAC,MAAD,CAAR,CAAR;AACD;AAH+C,KAAxC,CAAd;AAKA,UAAMM,KAAK,GAAG,EAAd;AACA,QAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,YAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOJ,KAAnB;AACEG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAO,KAAKH,KAAL,CAAWC,YAA9B;;AACF,QAAG,EAAE,KAAKF,KAAL,KAAeK,SAAjB,CAAH,EAAgC;AAC9BF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,WAAK,MAAM,CAACE,KAAD,CAAX,IAAsBC,MAAM,CAACC,OAAP,CAAe,KAAKR,KAApB,CAAtB,EAAkD;AAC9CG,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAP,QAAAA,KAAK,CAACU,IAAN,eAAW;AAAA,oBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,gBAAX;AACH;AACF;;AAGD,wBACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,gBACCP;AADD;AAAA;AAAA;AAAA;AAAA,YADF;AAMH;;AAtCoC;;AA0CvC,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport Project from './Project.js';\nimport {readRemoteFile} from 'react-papaparse';\n\nclass Projects extends React.Component {\n  render() {\n    let projectsSelvIkei = ['','','',''];\n\n    function splitter(results) {\n      let dadosLength = results.length;\n      let selvCounter = 0;\n      for (let i = 1; i < dadosLength; i++) {\n        if(results[i][0] == 'selv ikei '){\n          projectsSelvIkei[selvCounter] = results[i][1];\n          selvCounter++;\n        }\n      }\n      };\n      readRemoteFile(\"http://localhost:3001/projectos.csv\", {\n            complete: (results) => {\n              splitter(results['data']);\n            },\n          });\n      const items = [];\n      let nomes = this.props.projectNames;\n      console.log(typeof(nomes));\n        console.log(typeof(this.props.projectNames));\n      if(!(this.nomes === undefined)) {\n        console.log('dentro do if ');\n        for (const [value] of Object.entries(this.nomes)) {\n            console.log(value);\n            items.push(<li>{value}</li>);\n        }\n      }\n\n\n      return(\n        <div id=\"projects\">\n        {items}\n\n        </div>\n      )\n  }\n}\n\n\nexport default Projects\n"]},"metadata":{},"sourceType":"module"}